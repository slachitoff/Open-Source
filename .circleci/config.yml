version: 2.1

jobs:
  build-and-test:
    docker:
      - image: gcc:latest
    steps:
      - checkout

      - run:
          name: Update and Install Dependencies
          command: |
            apt-get update
            apt-get install -y python3-pip python3-venv cmake clang clang-tools clang-tidy clang-format
            pip3 install virtualenv
            virtualenv ~/venv
            echo "source ~/venv/bin/activate" >> $BASH_ENV

      - run:
          name: Install Conan
          command: |
            pip install conan
            conan --version  # Verify Conan installation

      - run:
          name: Detect and Create Conan Profile
          command: conan profile new default --detect --force

      - run:
          name: Update Conan Profile to Use libstdc++11
          command: conan profile update settings.compiler.libcxx=libstdc++11 default

      - run:
          name: Verify ClangFormat Version
          command: clang-format --version

      - run:
          name: Check Code Formatting
          command: |
            if find . \( -iname "*.h" -o -iname "*.cpp" \) -exec clang-format -style=file -output-replacements-xml {} + | grep "<replacement " > /dev/null; then
                echo "Code formatting issues found."
                exit 1
            else
                echo "No code formatting issues found."
            fi

      - run:
          name: Install Dependencies with Conan
          command: |
            mkdir build
            cd build
            conan install .. --build=missing -s build_type=Release

      - run:
          name: Configure Project with CMake
          command: |
            cd build
            cmake .. -DCMAKE_BUILD_TYPE=Release

      - run:
          name: Run Clang Static Analyzer
          command: |
            cd build
            scan-build --use-analyzer=/usr/bin/clang --status-bugs make

      - run:
          name: Run Clang-Tidy
          command: |
            cd build
            run-clang-tidy -p . || exit 1

      - run:
          name: Build Project
          command: |
            cd build
            cmake --build .

      - run:
          name: Run Tests
          command: ./build/MyTests

workflows:
  version: 2
  build-test:
    jobs:
      - build-and-test
